/*

https://www.hackerrank.com/contests/codewhiz-java-march-2016/challenges/serve-the-students

*/

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

class Student{
   private int token;
   private String fname;
   private double cgpa;
   public Student(int id, String fname, double cgpa) {
      super();
      this.token = id;
      this.fname = fname;
      this.cgpa = cgpa;
   }
   public int getToken() {
      return token;
   }
   public String getFname() {
      return fname;
   }
   public double getCgpa() {
      return cgpa;
   }
}

class MyNameComp implements Comparator<Student>{
    public int compare(Student o1, Student o2) {
        if(o1.getCgpa() != o2.getCgpa()){
         return o1.getCgpa() < o2.getCgpa() ? 1 : -1;
        }else{
            if(!o1.getFname().equals(o2.getFname())){
             return o1.getFname().compareTo(o2.getFname()) > 0 ? 1 : -1;
        }else{
            return o1.getToken() > o2.getToken() ? 1 : -1;
            }
        }
    }
}

public class Solution {
public static void main(String[] args) { 
    Scanner in = new Scanner(System.in); 
    int totalEvents = Integer.parseInt(in.nextLine()); 
    TreeSet list = new TreeSet<>(new MyNameComp()); 
    String name; 
    double gpa; 
    int token;
    
    while(totalEvents>0){
        String event = in.next();

        if(event.equals("ENTER")){
            name = in.next();
            gpa = in.nextDouble();
            token = in.nextInt();

            list.add(new Student(token, name, gpa));
        }else if (event.equals("SERVED")){
            if(!list.isEmpty()) list.pollFirst();
        }

        totalEvents--;
    }
    if(list.size()==0)
        System.out.println("EMPTY");
    Iterator<Student> iterator = list.iterator();
    
   while (iterator.hasNext()) {
		System.out.println(iterator.next().getFname());
	} 

}
}